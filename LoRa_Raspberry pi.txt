from time import sleep
from SX127x.LoRa import *
from SX127x.board_config import BOARD
from firebase import firebase
import pyrebase
config = {
  "apiKey": "YdZH4x1Yy6knmXAB18VmUDbArtAuhxAYtvzyBzH3",
  "authDomain": "meity-lora-rpi.firebaseapp.com",
  "databaseURL": "https://meity-lora-rpi-default-rtdb.firebaseio.com",
  "storageBucket": "meity-lora-rpi.appspot.com"
}
firebase = pyrebase.initialize_app(config)
#firebase.initializeApp(con);
db = firebase.database()
BOARD.setup()
class LoRaRcvCont(LoRa):
    def _init_(self, verbose=False):
        super(LoRaRcvCont, self)._init_(verbose)
        self.set_mode(MODE.SLEEP)
        self.set_dio_mapping([0] * 6)
    def start(self):
        self.reset_ptr_rx()
        self.set_mode(MODE.RXCONT)
        while True:
            sleep(.5)
            rssi_value = self.get_rssi_value()
            status = self.get_modem_status()
            sys.stdout.flush()
    def on_rx_done(self):
        print ("\nReceived: ")
        self.clear_irq_flags(RxDone=1)
        payload = self.read_payload(nocheck=True)
        #print (bytes(payload).decode("utf-8",'ignore'))
        data = bytes(payload).decode("utf-8",'ignore')
        print (data)
        temp = (data[0:4])
        humidity = (data[4:6])
        print ("Temperature:")
        print (temp)
        print ("Humidity:")
        print (humidity)
        data = {
                "Temperature": temp,
                "Humidity": humidity,
 }
        db.child("raspi").child("1-set").set(data)
        db.child("raspi").child("2-push").push(data)
        self.set_mode(MODE.SLEEP)
        self.reset_ptr_rx()
        self.set_mode(MODE.RXCONT)
lora = LoRaRcvCont(verbose=False)
lora.set_mode(MODE.STDBY)
#  Medium Range  Defaults after init are 434.0MHz, Bw = 125 kHz, Cr = 4/5, Sf = 128chips/symbol, CRC on 13 dBm
lora.set_pa_config(pa_select=1)
try:
    lora.start()
except KeyboardInterrupt:
    sys.stdout.flush()
    print ("")
    sys.stderr.write("KeyboardInterrupt\n")
finally:
    sys.stdout.flush()
    print ("")
    lora.set_mode(MODE.SLEEP)
    BOARD.teardown()